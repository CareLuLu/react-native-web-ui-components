{"remainingRequest":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/source-map-loader/index.js!/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/src/Screen/index.web.js","dependencies":[{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/src/Screen/index.web.js","mtime":1554255560000},{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/cache-loader/dist/cjs.js","mtime":1562610374000},{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/thread-loader/dist/cjs.js","mtime":1562610382000},{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560286341000},{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/source-map-loader/index.js","mtime":1562610382000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/src/Screen/index.web.js"],"names":["React","calculateHeight","window","innerHeight","document","documentElement","clientHeight","getElementsByTagName","calculateWidth","innerWidth","clientWidth","calculateType","width","addEventListener","eventName","handler","Error","screen","height","type","reduced","getHeight","getWidth","getType","getScrollElement","element","querySelector","lastElementChild","scrollTop","scrollTo","x","y","body","withKeyboard","Component","props","withScreen","state","mounted","onMountHandlers","tryToUpdate","update","bind","onMount","push","fn","shift","self","setState","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react';\n\nfunction calculateHeight() {\n  return window.innerHeight\n    || document.documentElement.clientHeight\n    || document.getElementsByTagName('body')[0].clientHeight;\n}\n\nfunction calculateWidth() {\n  return window.innerWidth\n    || document.documentElement.clientWidth\n    || document.getElementsByTagName('body')[0].clientWidth;\n}\n\nfunction calculateType(width) {\n  if (width >= 1200) {\n    return 'lg';\n  }\n  if (width >= 992) {\n    return 'md';\n  }\n  if (width >= 768) {\n    return 'sm';\n  }\n  return 'xs';\n}\n\nfunction addEventListener(eventName, handler) {\n  switch (eventName) {\n    case 'resize': window.addEventListener('resize', handler); break;\n    default: throw new Error(`Event '${eventName}' has not been implemented`);\n  }\n}\n\nlet screen = {\n  height: calculateHeight(),\n  width: calculateWidth(),\n};\nscreen.type = calculateType(screen.width);\nscreen.reduced = screen.type === 'xs' || screen.type === 'sm';\n\naddEventListener('resize', () => {\n  screen = {\n    height: calculateHeight(),\n    width: calculateWidth(),\n  };\n  screen.type = calculateType(screen.width);\n  screen.reduced = screen.type === 'xs' || screen.type === 'sm';\n});\n\nfunction getHeight() {\n  return screen.height;\n}\n\nfunction getWidth() {\n  return screen.width;\n}\n\nfunction getType() {\n  return screen.type;\n}\n\nfunction getScrollElement() {\n  let element = document.querySelector('[role=\"navigation\"]');\n  if (element && element.lastElementChild) {\n    return {\n      scrollTop: () => element.lastElementChild.scrollTop,\n      scrollTo: (x, y) => element.lastElementChild.scrollTo(x, y),\n      addEventListener: handler => element.lastElementChild.addEventListener('scroll', handler),\n    };\n  }\n  element = document.querySelector('[style=\"position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px; overflow-y: auto; transition: left 0.3s ease-out 0s, right 0.3s ease-out 0s;\"]');\n  if (element) {\n    return {\n      scrollTop: () => element.scrollTop,\n      scrollTo: (x, y) => element.scrollTo(x, y),\n      addEventListener: handler => element.addEventListener('scroll', handler),\n    };\n  }\n  return {\n    scrollTop: () => (document.documentElement || document.body).scrollTop,\n    scrollTo: (x, y) => (document.documentElement || document.body).scrollTo(x, y),\n    addEventListener: handler => window.addEventListener('scroll', handler),\n  };\n}\n\nexport default {\n  getHeight,\n  getWidth,\n  getType,\n  getScrollElement,\n  addEventListener,\n};\n\nexport const withKeyboard = () => Component => props => <Component {...props} keyboard={0} />;\n\nexport const withScreen = () => Component => class extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { screen };\n    this.mounted = false;\n    this.onMountHandlers = [];\n    this.tryToUpdate = this.update.bind(this);\n    addEventListener('resize', this.tryToUpdate);\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    this.onMount();\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  onMount(handler) {\n    if (handler) {\n      this.onMountHandlers.push(handler);\n    }\n    if (this.mounted) {\n      const fn = this.onMountHandlers.shift();\n      if (fn) {\n        fn();\n      }\n    }\n  }\n\n  update() {\n    const self = this;\n    self.onMount(() => self.setState({ screen }));\n  }\n\n  render() {\n    const { screen } = this.state; // eslint-disable-line\n    return <Component {...this.props} screen={screen} />;\n  }\n};\n"]}]}
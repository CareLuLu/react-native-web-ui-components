{"remainingRequest":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/thread-loader/dist/cjs.js??ref--5-1!/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--5-2!/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/source-map-loader/index.js!/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/src/Text/index.js","dependencies":[{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/src/Text/index.js","mtime":1564524332000},{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/cache-loader/dist/cjs.js","mtime":1562610374000},{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/thread-loader/dist/cjs.js","mtime":1562610382000},{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1560286341000},{"path":"/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/node_modules/source-map-loader/index.js","mtime":1562610382000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20gIi9Vc2Vycy9nYWJyaWVsbWFycXVlcy9EZXNrdG9wL0NhcmVMdUx1L3YzL25wbS9yZWFjdC1uYXRpdmUtd2ViLXVpLWNvbXBvbmVudHMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMiOwppbXBvcnQgX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIGZyb20gIi9Vc2Vycy9nYWJyaWVsbWFycXVlcy9EZXNrdG9wL0NhcmVMdUx1L3YzL25wbS9yZWFjdC1uYXRpdmUtd2ViLXVpLWNvbXBvbmVudHMvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvZ2FicmllbG1hcnF1ZXMvRGVza3RvcC9DYXJlTHVMdS92My9ucG0vcmVhY3QtbmF0aXZlLXdlYi11aS1jb21wb25lbnRzL3NyYy9UZXh0L2luZGV4LmpzIjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGVudGVyTW9kdWxlID0gKHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbCA6IHJlcXVpcmUoJ3JlYWN0LWhvdC1sb2FkZXInKSkuZW50ZXJNb2R1bGU7CiAgZW50ZXJNb2R1bGUgJiYgZW50ZXJNb2R1bGUobW9kdWxlKTsKfSkoKTsKCnZhciBfX3NpZ25hdHVyZV9fID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmRlZmF1bHQuc2lnbmF0dXJlIDogZnVuY3Rpb24gKGEpIHsKICByZXR1cm4gYTsKfTsKCmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7CmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7CmltcG9ydCBpc0FycmF5IGZyb20gJ2xvZGFzaC9pc0FycmF5JzsKaW1wb3J0IGlzU3RyaW5nIGZyb20gJ2xvZGFzaC9pc1N0cmluZyc7CmltcG9ydCBOYXRpdmVUZXh0IGZyb20gJy4vTmF0aXZlVGV4dCc7CmltcG9ydCB7IHdpdGhUaGVtZSB9IGZyb20gJy4uL1RoZW1lJzsKaW1wb3J0IExpbmsgZnJvbSAnLi4vTGluayc7CnZhciBMSU5FQlJFQUsgPSAvXFxuL2c7CnZhciBMSU5LID0gL1xbKFteXF1dKylcXVwoKFteKV0rKVwpL2c7Cgp2YXIgcGFyc2UgPSBmdW5jdGlvbiBwYXJzZSh0ZXh0LCB0aGVtZSkgewogIHZhciBwYXJzZWRUZXh0ID0gdGV4dC5yZXBsYWNlKExJTkVCUkVBSywgJ1xuJyk7CgogIGlmIChMSU5LLnRlc3QocGFyc2VkVGV4dCkpIHsKICAgIHZhciBjb21wb25lbnRzID0gW107CiAgICB2YXIgbGFzdEluZGV4ID0gMDsKICAgIHBhcnNlZFRleHQucmVwbGFjZShMSU5LLCBmdW5jdGlvbiAobWF0Y2gsIGFuY2hvciwgdG8sIGluZGV4KSB7CiAgICAgIGNvbXBvbmVudHMucHVzaChwYXJzZWRUZXh0LnN1YnN0cmluZyhsYXN0SW5kZXgsIGluZGV4KSk7CiAgICAgIGNvbXBvbmVudHMucHVzaChSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsKICAgICAgICBrZXk6ICIiLmNvbmNhdChpbmRleCwgIl9fIikuY29uY2F0KHRvKSwKICAgICAgICB0eXBlOiB0aGVtZS5jb2xvcnMucHJpbWFyeSwKICAgICAgICB0bzogdG8sCiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiAxOQogICAgICAgIH0sCiAgICAgICAgX19zZWxmOiB0aGlzCiAgICAgIH0sIGFuY2hvcikpOwogICAgICBsYXN0SW5kZXggPSBpbmRleCArIG1hdGNoLmxlbmd0aDsKICAgIH0pOwogICAgY29tcG9uZW50cy5wdXNoKHBhcnNlZFRleHQuc3Vic3RyaW5nKGxhc3RJbmRleCkpOwogICAgcmV0dXJuIGNvbXBvbmVudHM7CiAgfQoKICByZXR1cm4gcGFyc2VkVGV4dDsKfTsKCnZhciBub3JtYWxpemUgPSBmdW5jdGlvbiBub3JtYWxpemUoY2hpbGRyZW4sIHRoZW1lKSB7CiAgaWYgKCFjaGlsZHJlbikgewogICAgcmV0dXJuIGNoaWxkcmVuOwogIH0KCiAgaWYgKGlzU3RyaW5nKGNoaWxkcmVuKSkgewogICAgcmV0dXJuIHBhcnNlKGNoaWxkcmVuLCB0aGVtZSk7CiAgfQoKICBpZiAoIWlzQXJyYXkoY2hpbGRyZW4pKSB7CiAgICByZXR1cm4gY2hpbGRyZW47CiAgfQoKICByZXR1cm4gY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIChjaGlsZCkgewogICAgaWYgKCFpc1N0cmluZyhjaGlsZCkpIHsKICAgICAgcmV0dXJuIGNoaWxkOwogICAgfQoKICAgIHJldHVybiBwYXJzZShjaGlsZCwgdGhlbWUpOwogIH0pOwp9OwoKdmFyIFRleHQgPSBmdW5jdGlvbiBUZXh0KF9yZWYpIHsKICB2YXIgdGhlbWUgPSBfcmVmLnRoZW1lLAogICAgICBjaGlsZHJlbiA9IF9yZWYuY2hpbGRyZW4sCiAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYsIFsidGhlbWUiLCAiY2hpbGRyZW4iXSk7CgogIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KE5hdGl2ZVRleHQsIF9leHRlbmRzKHt9LCBwcm9wcywgewogICAgX19zb3VyY2U6IHsKICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSwKICAgICAgbGluZU51bWJlcjogNDgKICAgIH0sCiAgICBfX3NlbGY6IHRoaXMKICB9KSwgbm9ybWFsaXplKGNoaWxkcmVuLCB0aGVtZSkpOwp9OwoKVGV4dC5wcm9wVHlwZXMgPSB7CiAgdGhlbWU6IFByb3BUeXBlcy5zaGFwZSgpLmlzUmVxdWlyZWQsCiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5ub2RlLCBQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMubnVtYmVyLCBQcm9wVHlwZXMuYXJyYXldKQp9OwpUZXh0LmRlZmF1bHRQcm9wcyA9IHsKICBjaGlsZHJlbjogbnVsbAp9OwoKdmFyIF9kZWZhdWx0ID0gd2l0aFRoZW1lKCdUZXh0JykoVGV4dCk7CgpleHBvcnQgZGVmYXVsdCBfZGVmYXVsdDsKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5kZWZhdWx0OwoKICBpZiAoIXJlYWN0SG90TG9hZGVyKSB7CiAgICByZXR1cm47CiAgfQoKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihMSU5FQlJFQUssICJMSU5FQlJFQUsiLCAiL1VzZXJzL2dhYnJpZWxtYXJxdWVzL0Rlc2t0b3AvQ2FyZUx1THUvdjMvbnBtL3JlYWN0LW5hdGl2ZS13ZWItdWktY29tcG9uZW50cy9zcmMvVGV4dC9pbmRleC5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKExJTkssICJMSU5LIiwgIi9Vc2Vycy9nYWJyaWVsbWFycXVlcy9EZXNrdG9wL0NhcmVMdUx1L3YzL25wbS9yZWFjdC1uYXRpdmUtd2ViLXVpLWNvbXBvbmVudHMvc3JjL1RleHQvaW5kZXguanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihwYXJzZSwgInBhcnNlIiwgIi9Vc2Vycy9nYWJyaWVsbWFycXVlcy9EZXNrdG9wL0NhcmVMdUx1L3YzL25wbS9yZWFjdC1uYXRpdmUtd2ViLXVpLWNvbXBvbmVudHMvc3JjL1RleHQvaW5kZXguanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3Rlcihub3JtYWxpemUsICJub3JtYWxpemUiLCAiL1VzZXJzL2dhYnJpZWxtYXJxdWVzL0Rlc2t0b3AvQ2FyZUx1THUvdjMvbnBtL3JlYWN0LW5hdGl2ZS13ZWItdWktY29tcG9uZW50cy9zcmMvVGV4dC9pbmRleC5qcyIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKFRleHQsICJUZXh0IiwgIi9Vc2Vycy9nYWJyaWVsbWFycXVlcy9EZXNrdG9wL0NhcmVMdUx1L3YzL25wbS9yZWFjdC1uYXRpdmUtd2ViLXVpLWNvbXBvbmVudHMvc3JjL1RleHQvaW5kZXguanMiKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihfZGVmYXVsdCwgImRlZmF1bHQiLCAiL1VzZXJzL2dhYnJpZWxtYXJxdWVzL0Rlc2t0b3AvQ2FyZUx1THUvdjMvbnBtL3JlYWN0LW5hdGl2ZS13ZWItdWktY29tcG9uZW50cy9zcmMvVGV4dC9pbmRleC5qcyIpOwp9KSgpOwoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgbGVhdmVNb2R1bGUgPSAodHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsIDogcmVxdWlyZSgncmVhY3QtaG90LWxvYWRlcicpKS5sZWF2ZU1vZHVsZTsKICBsZWF2ZU1vZHVsZSAmJiBsZWF2ZU1vZHVsZShtb2R1bGUpOwp9KSgpOw=="},{"version":3,"sources":["/Users/gabrielmarques/Desktop/CareLuLu/v3/npm/react-native-web-ui-components/src/Text/index.js"],"names":["React","PropTypes","isArray","isString","NativeText","withTheme","Link","LINEBREAK","LINK","parse","text","theme","parsedText","replace","test","components","lastIndex","match","anchor","to","index","push","substring","colors","primary","length","normalize","children","map","child","Text","props","propTypes","shape","isRequired","oneOfType","node","string","number","array","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport isArray from 'lodash/isArray';\nimport isString from 'lodash/isString';\nimport NativeText from './NativeText';\nimport { withTheme } from '../Theme';\nimport Link from '../Link';\n\nconst LINEBREAK = /\\\\n/g;\nconst LINK = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g;\n\nconst parse = (text, theme) => {\n  const parsedText = text.replace(LINEBREAK, '\\n');\n  if (LINK.test(parsedText)) {\n    const components = [];\n    let lastIndex = 0;\n    parsedText.replace(LINK, (match, anchor, to, index) => {\n      components.push(parsedText.substring(lastIndex, index));\n      components.push(<Link key={`${index}__${to}`} type={theme.colors.primary} to={to}>{anchor}</Link>);\n      lastIndex = index + match.length;\n    });\n\n    components.push(parsedText.substring(lastIndex));\n    return components;\n  }\n  return parsedText;\n};\n\nconst normalize = (children, theme) => {\n  if (!children) {\n    return children;\n  }\n  if (isString(children)) {\n    return parse(children, theme);\n  }\n  if (!isArray(children)) {\n    return children;\n  }\n  return children.map((child) => {\n    if (!isString(child)) {\n      return child;\n    }\n    return parse(child, theme);\n  });\n};\n\nconst Text = ({ theme, children, ...props }) => (\n  <NativeText {...props}>\n    {normalize(children, theme)}\n  </NativeText>\n);\n\nText.propTypes = {\n  theme: PropTypes.shape().isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.array,\n  ]),\n};\n\nText.defaultProps = {\n  children: null,\n};\n\nexport default withTheme('Text')(Text);\n"]}]}